# zshenv sets up environment variables that we want even if this is a
# noninteractive shell, e.g. variables that we'd like to have available in
# processes launched by wrapper scripts.

# Make paths behave sanely (unique values only!) and make sure Saturn Valley
# stuff is near the head.  Also add local stuff if it exists.
typeset -U path fpath cdpath
path[1,0]=$SVCONFIGDIR/bin
[[ -d $SVCONFIGDIR/local/bin ]] && path[1,0]=$SVCONFIGDIR/local/bin
fpath[1,0]=$SVCONFIGDIR/zsh/functions

# Where to find a few config files.  We override the default location via
# environment variables so the user doesn't have to create stubs in $HOME.
export INPUTRC=$SVCONFIGDIR/inputrc
export SCREENRC=$SVCONFIGDIR/screenrc
export VIMINIT="source $SVCONFIGDIR/vim/startup.vim"
export PYTHONSTARTUP="$SVCONFIGDIR/python/startup.py"

# We call this on startup, and also when reconnecting a screen session.
function init_svplatform () {
  # Figure out the sort of environment we're running on, so later tweaks can
  # behave appropriately.
  if [[ $OSTYPE = cygwin ]]; then
    SVPLATFORM=cygwin
  # TODO(jleen): Make the OS X check less bogus.
  elif [[ $TERM_PROGRAM = Apple_Terminal || $TERM_PROGRAM = iTerm.app ]]; then  
    SVPLATFORM=osx
  elif [[ -n $DISPLAY ]]; then
    SVPLATFORM=X11
  elif [[ -n $WINDOW ]]; then
    SVPLATFORM=screen
  else
    SVPLATFORM=vt
  fi

  if [[ `uname -r` = *Microsoft* || -n $WSL_INTEROP ]]; then
    SVLINUX=wsl
  fi

  # The all-important EDITOR.
  if [[ $SVPLATFORM = X11 ]]; then
    export EDITOR='gvim -f'
  else
    export EDITOR='vi'
  fi
  export VISUAL=$EDITOR
}
init_svplatform

# The less-important less.
[[ -x /usr/bin/lesspipe ]] && eval "$(lesspipe)"

export POETRY_VIRTUALENVS_IN_PROJECT=true
export PIPENV_VENV_IN_PROJECT=1
export OPEN_SOURCE_CONTRIBUTOR=true
