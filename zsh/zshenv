if [ "$UID" != 0 ]; then
  # This is zshenv but it's useful to have it bash-compatible (so it can be
  # sourced from .xsession, for example).
  if [ -n "$BASH_VERSION" ]; then
    export SVCONFIGDIR=`dirname $(dirname ${BASH_ARGV[0]})`
  else
    export SVCONFIGDIR="${0:h:h}"
  fi

  SVCONFIGPATH=$SVCONFIGDIR/bin
  SVCONFIGFPATH=$SVCONFIGDIR/zsh/functions

  [[ $PATH = *$SVCONFIGPATH* ]] || PATH=$SVCONFIGPATH:$PATH
  [[ $FPATH = *$SVCONFIGFPATH* ]] || FPATH=$SVCONFIGFPATH:$FPATH
  [[ $PATH = *$HOME/bin* ]] || PATH=$HOME/bin:$PATH

  export INPUTRC="$SVCONFIGDIR/inputrc"
  export SCREENRC="$SVCONFIGDIR/screenrc"
  export VIMINIT="source $SVCONFIGDIR/vim/startup.vim"

  function set_platform {
    if [ "$OSTYPE" = cygwin ]; then
      SVPLATFORM=cygwin
      [[ -o l ]] && PATH=/usr/bin:$PATH && cd  # Srsly?
      VIMINIT="source `cygpath -wa $SVCONFIGDIR`/vim/startup.vim"
      setopt NO_GLOBAL_RCS
    elif [[ "$TERM_PROGRAM" = Apple_Terminal || 
        "$TERM_PROGRAM" = iTerm.app ]]; then  # Wrong condition!!
      SVPLATFORM=mac
    elif [ -n "$DISPLAY" ]; then
      SVPLATFORM=X11
    elif [ -n "$WINDOW" ]; then
      SVPLATFORM=screen
    else
      SVPLATFORM=vt
    fi
  }
  set_platform

  function set_editor {
    if [ "$SVPLATFORM" = X11 ]; then
      export EDITOR='gvim -f'
    else
      export EDITOR='vi'
    fi
    export VISUAL="$EDITOR"
  }
  set_editor
fi

# Source zshrc here when interactive, so we don't need a bootstrap in ~/.zshrc.
[[ -o i ]] && source "$SVCONFIGDIR/zsh/zshrc"
